// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VShop.ProductAPI.Context;

#nullable disable

namespace VShop.ProductAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240404234024_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("VShop.ProductAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Material Escolar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Acessórios"
                        });
                });

            modelBuilder.Entity("VShop.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgURL")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<long>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Muitas Cores",
                            ImgURL = "escolar/lapis_coloridos1.jpg",
                            Name = "Lapis Coloridos",
                            Price = 10m,
                            Stock = 12L
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Padrão",
                            ImgURL = "escolar/borracha_branca1.jpg",
                            Name = "Borracha Branca",
                            Price = 10m,
                            Stock = 12L
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Raiz",
                            ImgURL = "escolar/caneta_bic4.jpg",
                            Name = "Caneta Bic",
                            Price = 10m,
                            Stock = 12L
                        });
                });

            modelBuilder.Entity("VShop.ProductAPI.Models.Product", b =>
                {
                    b.HasOne("VShop.ProductAPI.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("VShop.ProductAPI.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
